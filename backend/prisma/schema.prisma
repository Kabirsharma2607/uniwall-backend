// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user_details {
  row_id            BigInt                @id @default(autoincrement())
  user_id           String                @unique @default(uuid())
  username          String                @unique
  created_at        DateTime              @default(now())
  updated_at        DateTime              @updatedAt
  user_state        user_state            @default(INIT)
  user_auth_details user_auth_details?
  wallets           user_wallet_details[]

  @@index([row_id])
  @@index([user_id])
}

model user_auth_details {
  row_id       BigInt       @id @default(autoincrement())
  user_id      String       @unique
  user         user_details @relation(fields: [user_id], references: [user_id])
  password     String
  words_secret String       @unique
  created_at   DateTime     @default(now())

  @@index([row_id])
  @@index([user_id])
}

model user_wallet_details {
  row_id             BigInt      @id @default(autoincrement())
  user_id            BigInt
  raw_user_id        String
  wallet_address     String
  wallet_private_key String
  wallet_type        wallet_type
  created_at         DateTime    @default(now())
  updated_at         DateTime    @updatedAt

  user_details          user_details           @relation(fields: [user_id], references: [row_id])
  user_wallets_qr_codes user_wallets_qr_codes?

  @@unique([user_id, wallet_type])
  @@index([row_id])
  @@index([user_id])
}

model admin_wallet_details {
  id             String      @id @default(uuid())
  wallet_type    wallet_type
  wallet_address String
  private_key    String
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt
}

model user_wallets_qr_codes {
  row_id      BigInt   @id @default(autoincrement())
  wallet_id   BigInt
  qr_code_url String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  user_wallet user_wallet_details @relation(fields: [wallet_id], references: [row_id])

  @@unique([wallet_id])
  @@index([wallet_id])
}

enum wallet_type {
  SOL
  BTC
  PALO
  ETH
}

enum user_state {
  INIT
  WORD_SECRET_COPIED
  WALLET_SELECTED
  COMPLETED
}
